익명 구현 객체는 인터페이스를 코드 블록 안에서 직접 구현하여 생성하는 것을 말합니다.
이것은 인터페이스를 구현한 익명 클래스의 인스턴스를 생성하는 것과 유사합니다.
익명 구현 객체는 한 번만 사용되고 더 이상 참조할 필요가 없는 경우에 유용하게 사용됩니다.
코드 블록 내에서 인터페이스를 구현하여 객체를 생성하기 때문에
따로 클래스를 정의하지 않아도 되므로 코드를 간결하게 유지할 수 있습니다.

package chapter01.example06;

public interface RemoteControl {	// 인터페이스는 객체를 만들 수 없다.

		// 상수
		static final int MAX_VOLUME = 10;
		int MIN_VOLUME = 1;	// static final을 생략해도 컴파일러가 자동으로 붙여줌
		
		// 추상 메서드
		public abstract void turnOn();
		void turnOff();	  // public abstract를 생략해도 컴파일러가 자동으로 붙여줌
		void setVolumeUp();
		void setVolumeDown();
		void setChannelUp();
		void setChannelDown();
		void setChannel(int channel);	// 매개변수가 있음. 나중에 호출할때 동일하게 해줘야함.
		
		// default 메서드 - 구현부가 있는 메서드 (재정의 가능)
		default void setMute(boolean mute) {
			if(mute) {
				System.out.println("무음 처리합니다.");
			}else {
				System.out.println("무음을 해제합니다.");
			}
		}
		
		// 정적 메서드 - 구현부가 있는 메서드 
		static void changeBattery() {
			System.out.println("건전지를 교체합니다.");
		}
}

package chapter01.example06;

public class Audio implements RemoteControl {

	private int vol;
	private int channel;
	
	@Override
	public void turnOn() {
		System.out.println("오디오 전원을 켭니다.");
	}
	@Override
	public void turnOff() {
		System.out.println("오디오 전원을 끕니다.");
	}
	@Override
	public void setVolumeUp() {
		vol++;
	}
	@Override
	public void setVolumeDown() {
		vol--;
	}
	@Override
	public void setChannelUp() {
		channel++;
	}
	@Override
	public void setChannelDown() {
		channel--;
	}
	@Override
	public void setChannel(int channel) {
	}
}


package chapter01.example06;

public class Tv implements RemoteControl{

	private int vol;
	private int channel;
	
	@Override
	public void turnOn() {
		System.out.println("TV 전원을 켭니다.");
	}
	@Override
	public void turnOff() {
		System.out.println("TV 전원을 끕니다.");
	}
	@Override
	public void setVolumeUp() {
		vol++;
	}
	@Override
	public void setVolumeDown() {
		vol--;
	}
	@Override
	public void setChannelUp() {
		channel++;
	}
	@Override
	public void setChannelDown() {
		channel--;
	}
	@Override
	public void setChannel(int channel) {
	}
}

package chapter01.example06;

public class RemoteControlMain {

	public static void main(String[] args) {
		
		RemoteControl rc = new RemoteControl() { // 익명 구현 객체 - 객체를 만들 수 없는 인터페이스를 코드 블럭 안에서 오버라이드 해주는 것.
			@Override
			public void turnOn() {	// 익명 구현 객체는 클래스를 안 만들고 바로 만들어서 씀.
				System.out.println("TV를 켭니다.");
			}
			@Override
			public void turnOff() {
				System.out.println("TV를 끕니다.");
			}
			@Override
			public void setChannel(int channel) {
				System.out.println(channel + " 채널이 입력되었습니다.");
			}
			@Override
			public void setVolumeUp() {
				
			}
			@Override
			public void setVolumeDown() {
			}
			@Override
			public void setChannelUp() {
			}
			@Override
			public void setChannelDown() {	
			}
		};
	}
}

